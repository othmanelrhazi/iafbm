Ext.data.JsonP.Ext_ia_form_field_Percentage({"tagname":"class","name":"Ext.ia.form.field.Percentage","extends":"Ext.form.field.Number","mixins":[],"alternateClassNames":[],"aliases":{"widget":["ia-percentfield"]},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Ext.ia.form.field.Percentage","code_type":"ext_define","members":{"cfg":[],"property":[{"name":"","tagname":"property","owner":"Ext.ia.form.field.Percentage","meta":{},"id":"property-"},{"name":"maxValue","tagname":"property","owner":"Ext.ia.form.field.Percentage","meta":{"private":true},"id":"property-maxValue"},{"name":"minValue","tagname":"property","owner":"Ext.ia.form.field.Percentage","meta":{"private":true},"id":"property-minValue"}],"method":[],"event":[],"css_var":[],"css_mixin":[]},"linenr":560,"files":[{"filename":"classes.js","href":"classes.html#Ext-ia-form-field-Percentage"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Ext.form.field.Number"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.form.field.Number<div class='subclass '><strong>Ext.ia.form.field.Percentage</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/classes.html#Ext-ia-form-field-Percentage' target='_blank'>classes.js</a></div></pre><div class='doc-contents'><p>Extends Ext.form.field.Number with\n- min/max values set to 0/100</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ia.form.field.Percentage'>Ext.ia.form.field.Percentage</span><br/><a href='source/classes.html#Ext-ia-form-field-Percentage-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ia.form.field.Percentage-property-' class='name expandable'></a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>Draft version of a multifield field\nExt.define('Ext.ia.form.field.Multi', {\n\nextend: 'Ext.form.FieldContainer',\nalias...</div><div class='long'><p>Draft version of a multifield field\nExt.define('Ext.ia.form.field.Multi', {</p>\n\n<pre><code>extend: 'Ext.form.FieldContainer',\nalias: 'widget.ia-multifield',\n// Config\nitemType: 'ia-datefield',\nitemMin: 1,\nitemMax: null,\nitemField: null,\nstore: null,\n//\ninitComponent: function() {\n    this.items = [{\n        xtype: 'fieldcontainer',\n        items: []\n    },{\n        xtype: 'button',\n        id: 'ia-multifield-add-button',\n        text: '+',\n        handler: function() {\n            this.up().addField();\n        }\n    }];\n    //\n    var me = this;\n    me.callParent();\n    //\n    if (this.store) this.initStore();\n    else for (var i=this.getFieldsCount(); i&lt;this.itemMin; i++) this.addField();\n},\ninitStore: function() {\n    if (!this.store) return;\n    var me = this;\n    this.store.on('load', function() {\n        this.each(function(record) {\n            me.addField(record);\n        });\n    });\n},\ncreateItem: function(record) {\n    var value = record ? record.get(this.itemField) : null;\n    return {\n        xtype: this.itemType,\n        name: 'FIXME', //FIXME\n        value: value,\n        _record: record\n    };\n},\n// TODO: Attach an onChange event in order to store the changed record\naddField: function(record) {\n    var me = this,\n        container = this.down('fieldcontainer'),\n        count = this.getFieldsCount();\n    // Manages store\n    // TODO: create a new dirty record and attach it to the field\n    //       as a _record property\n    // Adds field UI\n    if (!this.itemMax || count &lt; this.itemMax) {\n        var item = {\n            xtype: 'fieldcontainer',\n            layout: 'hbox',\n            width: 300, //FIXME: how to guess width? from container?\n            items: [this.createItem(record), {\n                xtype: 'button',\n                text: '-',\n                handler: function(button) {\n                    me.removeField(button);\n                }\n            }]\n        };\n        container.add(item);\n    }\n    this.toggleControls();\n},\nremoveField: function(button) {\n    var field = button.up(),\n        widget = this,\n        count = widget.getFieldsCount();\n    // Manages store\n    // TODO: remove record from store\n    //var record = field.items.items[0]._record;\n    // Removes field UI\n    if (count &gt; widget.itemMin) field.destroy();\n    widget.toggleControls();\n},\ngetFieldsCount: function() {\n    return this.down('fieldcontainer').items.getCount();\n},\ntoggleControls: function() {\n    var items = this.down('fieldcontainer').items,\n        count = this.getFieldsCount();\n    // Manages add button\n    var add_button = Ext.getCmp('ia-multifield-add-button');\n    if (!this.itemMax || count &lt; this.itemMax) {\n        add_button.show();\n    } else {\n        add_button.hide();\n    }\n    // Manages del button\n    var del_buttons = [];\n    items.each(function(item) { del_buttons.push(item.down('button')) });\n    if (count &gt; this.itemMin) {\n        Ext.each(del_buttons, function(button) { button.show() });\n    } else {\n        Ext.each(del_buttons, function(button) { button.hide() });\n    }\n}\n</code></pre>\n\n<p>});</p>\n</div></div></div><div id='property-maxValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ia.form.field.Percentage'>Ext.ia.form.field.Percentage</span><br/><a href='source/classes.html#Ext-ia-form-field-Percentage-property-maxValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ia.form.field.Percentage-property-maxValue' class='name expandable'>maxValue</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>100</code></p></div></div></div><div id='property-minValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ia.form.field.Percentage'>Ext.ia.form.field.Percentage</span><br/><a href='source/classes.html#Ext-ia-form-field-Percentage-property-minValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ia.form.field.Percentage-property-minValue' class='name expandable'>minValue</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>0</code></p></div></div></div></div></div></div></div>"});